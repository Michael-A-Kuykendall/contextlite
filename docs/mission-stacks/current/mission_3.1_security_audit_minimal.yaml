---
name: "Comprehensive Security Audit & Testing"
version: "1.0"
mission:
  name: "Comprehensive Security Audit & Testing"
  id: "mission_3.1_security_audit"
  phase: "Phase 3: Security & Compliance"
  priority: "CRITICAL"
  model_assignment: "llama32-champion:latest"
  estimated_duration: "45-60 minutes"
  
description: |
  CRITICAL: Conduct comprehensive security testing of ContextLite to address previously identified 
  PII exposure vulnerabilities and validate current security posture against production deployment.
  
  Address 4 critical vulnerabilities and 2 security warnings identified in public-facing
  deployment assessment to prevent GDPR fines (â‚¬20M), CCPA fines ($750/customer), and legal liability.

objectives:
  - Audit authentication and authorization mechanisms
  - Test data encryption and storage security  
  - Validate rate limiting and DDoS protection
  - Check for hardcoded credentials and secrets exposure
  - Address 4 critical vulnerabilities identified
  
context:
  repository: "Michael-A-Kuykendall/contextlite"
  security_concerns: "4 critical vulnerabilities identified"
  compliance_risk: "GDPR/CCPA fines if not addressed"
  current_status: "Partial security improvements implemented"
  
inputs:
  - current_auth_system: "internal/auth/"
  - database_files: "*.db files"
  - api_endpoints: "port 8084 API"
  - security_assessment: "Previous public deployment review"

tasks:
  1:
    name: "Authentication Security Testing"
    action: "Validate Bearer token system and check for authentication bypasses"
    expected_output: "Authentication validation report with test results"
    
  2:
    name: "Database Security Audit"  
    action: "Scan for hardcoded secrets and validate database file permissions"
    expected_output: "Database security assessment with vulnerability findings"
    
  3:
    name: "API Endpoint Security Testing"
    action: "Test API endpoints for authentication requirements and data leakage"
    expected_output: "API security report with endpoint vulnerability assessment"
    
  4:
    name: "Workspace Isolation Security"
    action: "Validate workspace isolation and cross-workspace access prevention"
    expected_output: "Workspace security validation with isolation test results"

validation_criteria:
  - All 4 critical security vulnerabilities addressed
  - Authentication system properly tested and secured
  - Database access controls validated
  - API endpoints secured with proper authentication
  - Workspace isolation functioning correctly

success_metrics:
  - coverage: "95%+ security test coverage"
  - vulnerabilities: "0 critical, 0 high-severity issues"
  - tests: "All security tests pass"
  - documentation: "Security audit report generated"
  
deliverables:
  - Security test suite with automated tests
  - Security audit report with findings
  - Security configuration templates
  - Compliance documentation

steps:
  - id: "auth_check"
    name: "Check Bearer Token Implementation"
    step_type: "command"
    command: "grep -r 'Bearer' internal/auth/ --include='*.go'"
    description: "Verify Bearer token authentication is implemented"
    parameters: {}
    timeout: 30
  - id: "auth_test"
    name: "Run Authentication Tests"
    step_type: "command"
    command: "go test -v ./internal/auth/..."
    description: "Execute authentication test suite"
    parameters: {}
    timeout: 60
  - id: "db_permissions"
    name: "Check Database File Permissions"
    step_type: "command"
    command: "find . -name '*.db' -exec ls -la {} \\;"
    description: "Validate database file security"
    parameters: {}
    timeout: 30
  - id: "api_auth_test"
    name: "Test API Authentication"
    step_type: "command"
    command: "curl -H 'Authorization: Bearer invalid' http://localhost:8084/api/v1/stats"
    description: "Verify API endpoints require authentication"
    parameters: {}
    timeout: 30
  
follow_up_missions:
  - "mission_3.2_test_coverage_fixes"
  - "mission_3.3_database_import" 
  - "mission_3.4_security_hardening"
  
risk_assessment: "HIGH"
risk_notes: |
  - Security testing could disrupt running services
  - False positives could cause unnecessary alarm
  - Must not expose sensitive data during testing
  
model_rationale: |
  Using llama32-champion:latest because:
  - Specialized security knowledge required
  - Complex multi-system security testing
  - GDPR/CCPA compliance expertise needed
  - High-stakes security implementation
